// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.LargeInstance.Models
{
    /// <summary> Enum of two possible values to determine if the ALI instance restart operation should forcefully terminate and halt any existing processes that may be running on the server or not. </summary>
    public readonly partial struct AzureLargeInstanceForcePowerState : IEquatable<AzureLargeInstanceForcePowerState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureLargeInstanceForcePowerState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureLargeInstanceForcePowerState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ActiveValue = "active";
        private const string InactiveValue = "inactive";

        /// <summary> Active means that the restart operation will terminate and halt existing processes that may be running on the server. </summary>
        public static AzureLargeInstanceForcePowerState Active { get; } = new AzureLargeInstanceForcePowerState(ActiveValue);
        /// <summary> Inactive means that the restart operation will not terminate and halt existing processes that may be running on the server. </summary>
        public static AzureLargeInstanceForcePowerState Inactive { get; } = new AzureLargeInstanceForcePowerState(InactiveValue);
        /// <summary> Determines if two <see cref="AzureLargeInstanceForcePowerState"/> values are the same. </summary>
        public static bool operator ==(AzureLargeInstanceForcePowerState left, AzureLargeInstanceForcePowerState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureLargeInstanceForcePowerState"/> values are not the same. </summary>
        public static bool operator !=(AzureLargeInstanceForcePowerState left, AzureLargeInstanceForcePowerState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureLargeInstanceForcePowerState"/>. </summary>
        public static implicit operator AzureLargeInstanceForcePowerState(string value) => new AzureLargeInstanceForcePowerState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureLargeInstanceForcePowerState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureLargeInstanceForcePowerState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
