// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.LargeInstance.Models
{
    /// <summary> Power states that an Azure Large Instance can be in. </summary>
    public readonly partial struct AzureLargeInstancePowerStateEnum : IEquatable<AzureLargeInstancePowerStateEnum>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureLargeInstancePowerStateEnum"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureLargeInstancePowerStateEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StartingValue = "starting";
        private const string StartedValue = "started";
        private const string StoppingValue = "stopping";
        private const string StoppedValue = "stopped";
        private const string RestartingValue = "restarting";
        private const string UnknownValue = "unknown";

        /// <summary> Starting means that the Azure Large Instance resource is turning on. </summary>
        public static AzureLargeInstancePowerStateEnum Starting { get; } = new AzureLargeInstancePowerStateEnum(StartingValue);
        /// <summary> Started means that the Azure Large Instance resource has been powered on. </summary>
        public static AzureLargeInstancePowerStateEnum Started { get; } = new AzureLargeInstancePowerStateEnum(StartedValue);
        /// <summary> Stopping means that the Azure Large Instance resource is shutting down. </summary>
        public static AzureLargeInstancePowerStateEnum Stopping { get; } = new AzureLargeInstancePowerStateEnum(StoppingValue);
        /// <summary> Stopped means that the Azure Large Instance resource has shut down. </summary>
        public static AzureLargeInstancePowerStateEnum Stopped { get; } = new AzureLargeInstancePowerStateEnum(StoppedValue);
        /// <summary> Restarting means that the Azure Large Instance resource is restarting. </summary>
        public static AzureLargeInstancePowerStateEnum Restarting { get; } = new AzureLargeInstancePowerStateEnum(RestartingValue);
        /// <summary> Unknown means that the state of the Azure Large Instance is unknown. </summary>
        public static AzureLargeInstancePowerStateEnum Unknown { get; } = new AzureLargeInstancePowerStateEnum(UnknownValue);
        /// <summary> Determines if two <see cref="AzureLargeInstancePowerStateEnum"/> values are the same. </summary>
        public static bool operator ==(AzureLargeInstancePowerStateEnum left, AzureLargeInstancePowerStateEnum right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureLargeInstancePowerStateEnum"/> values are not the same. </summary>
        public static bool operator !=(AzureLargeInstancePowerStateEnum left, AzureLargeInstancePowerStateEnum right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureLargeInstancePowerStateEnum"/>. </summary>
        public static implicit operator AzureLargeInstancePowerStateEnum(string value) => new AzureLargeInstancePowerStateEnum(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureLargeInstancePowerStateEnum other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureLargeInstancePowerStateEnum other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
