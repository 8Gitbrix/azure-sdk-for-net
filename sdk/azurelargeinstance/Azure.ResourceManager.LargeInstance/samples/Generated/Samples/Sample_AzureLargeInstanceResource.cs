// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.LargeInstance;
using Azure.ResourceManager.LargeInstance.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.LargeInstance.Samples
{
    public partial class Sample_AzureLargeInstanceResource
    {
        // AzureLargeInstance_ListBySubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAzureLargeInstances_AzureLargeInstanceListBySubscription()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_ListBySubscription.json
            // this example is just showing the usage of "AzureLargeInstance_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "f0f4887f-d13c-4943-a8ba-d7da28d2a3fd";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (AzureLargeInstanceResource item in subscriptionResource.GetAzureLargeInstancesAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AzureLargeInstanceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // AzureLargeInstance_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_AzureLargeInstanceGet()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_Get.json
            // this example is just showing the usage of "AzureLargeInstance_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AzureLargeInstanceResource created on azure
            // for more information of creating AzureLargeInstanceResource, please refer to the document of AzureLargeInstanceResource
            string subscriptionId = "f0f4887f-d13c-4943-a8ba-d7da28d2a3fd";
            string resourceGroupName = "myResourceGroup";
            string azureLargeInstanceName = "myAzureLargeInstance";
            ResourceIdentifier azureLargeInstanceResourceId = AzureLargeInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, azureLargeInstanceName);
            AzureLargeInstanceResource azureLargeInstance = client.GetAzureLargeInstanceResource(azureLargeInstanceResourceId);

            // invoke the operation
            AzureLargeInstanceResource result = await azureLargeInstance.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AzureLargeInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AzureLargeInstance_Delete_Tag
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_AzureLargeInstanceDeleteTag()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_PatchTags_Delete.json
            // this example is just showing the usage of "AzureLargeInstance_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AzureLargeInstanceResource created on azure
            // for more information of creating AzureLargeInstanceResource, please refer to the document of AzureLargeInstanceResource
            string subscriptionId = "f0f4887f-d13c-4943-a8ba-d7da28d2a3fd";
            string resourceGroupName = "myResourceGroup";
            string azureLargeInstanceName = "myALInstance";
            ResourceIdentifier azureLargeInstanceResourceId = AzureLargeInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, azureLargeInstanceName);
            AzureLargeInstanceResource azureLargeInstance = client.GetAzureLargeInstanceResource(azureLargeInstanceResourceId);

            // invoke the operation
            AzureLargeInstancePatch patch = new AzureLargeInstancePatch();
            AzureLargeInstanceResource result = await azureLargeInstance.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AzureLargeInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AzureLargeInstance_Update_Tag
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_AzureLargeInstanceUpdateTag()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_PatchTags.json
            // this example is just showing the usage of "AzureLargeInstance_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AzureLargeInstanceResource created on azure
            // for more information of creating AzureLargeInstanceResource, please refer to the document of AzureLargeInstanceResource
            string subscriptionId = "f0f4887f-d13c-4943-a8ba-d7da28d2a3fd";
            string resourceGroupName = "myResourceGroup";
            string azureLargeInstanceName = "myALInstance";
            ResourceIdentifier azureLargeInstanceResourceId = AzureLargeInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, azureLargeInstanceName);
            AzureLargeInstanceResource azureLargeInstance = client.GetAzureLargeInstanceResource(azureLargeInstanceResourceId);

            // invoke the operation
            AzureLargeInstancePatch patch = new AzureLargeInstancePatch();
            AzureLargeInstanceResource result = await azureLargeInstance.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AzureLargeInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AzureLargeInstance_Restart
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Restart_AzureLargeInstanceRestart()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_Restart.json
            // this example is just showing the usage of "AzureLargeInstance_Restart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AzureLargeInstanceResource created on azure
            // for more information of creating AzureLargeInstanceResource, please refer to the document of AzureLargeInstanceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string azureLargeInstanceName = "myALInstance";
            ResourceIdentifier azureLargeInstanceResourceId = AzureLargeInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, azureLargeInstanceName);
            AzureLargeInstanceResource azureLargeInstance = client.GetAzureLargeInstanceResource(azureLargeInstanceResourceId);

            // invoke the operation
            ArmOperation<OperationStatusResult> lro = await azureLargeInstance.RestartAsync(WaitUntil.Completed);
            OperationStatusResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        // AzureLargeInstance_Shutdown
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Shutdown_AzureLargeInstanceShutdown()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_Shutdown.json
            // this example is just showing the usage of "AzureLargeInstance_Shutdown" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AzureLargeInstanceResource created on azure
            // for more information of creating AzureLargeInstanceResource, please refer to the document of AzureLargeInstanceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string azureLargeInstanceName = "myALInstance";
            ResourceIdentifier azureLargeInstanceResourceId = AzureLargeInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, azureLargeInstanceName);
            AzureLargeInstanceResource azureLargeInstance = client.GetAzureLargeInstanceResource(azureLargeInstanceResourceId);

            // invoke the operation
            ArmOperation<OperationStatusResult> lro = await azureLargeInstance.ShutdownAsync(WaitUntil.Completed);
            OperationStatusResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        // AzureLargeInstance_Start
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Start_AzureLargeInstanceStart()
        {
            // Generated from example definition: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_Start.json
            // this example is just showing the usage of "AzureLargeInstance_Start" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AzureLargeInstanceResource created on azure
            // for more information of creating AzureLargeInstanceResource, please refer to the document of AzureLargeInstanceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string azureLargeInstanceName = "myALInstance";
            ResourceIdentifier azureLargeInstanceResourceId = AzureLargeInstanceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, azureLargeInstanceName);
            AzureLargeInstanceResource azureLargeInstance = client.GetAzureLargeInstanceResource(azureLargeInstanceResourceId);

            // invoke the operation
            ArmOperation<OperationStatusResult> lro = await azureLargeInstance.StartAsync(WaitUntil.Completed);
            OperationStatusResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
